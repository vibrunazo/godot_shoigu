[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://bkfil548gvjxg"]

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_17myp"]
operator = 8

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_teo35"]
input_name = "color"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_gl58d"]
parameter_name = "color_input"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_4wrx5"]
parameter_name = "weight"
hint = 1
max = 2.0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_xdari"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, 0.0]
op_type = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_7rxox"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 color_input : source_color;
uniform float weight : hint_range(0, 2);



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


// ColorParameter:3
	vec4 n_out3p0 = color_input;


	vec3 n_out10p0;
// ColorOp:10
	{
		float base = vec3(n_out2p0.xyz).x;
		float blend = vec3(n_out3p0.xyz).x;
		if (base < 0.5) {
			n_out10p0.x = (base * (2.0 * blend));
		} else {
			n_out10p0.x = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out2p0.xyz).y;
		float blend = vec3(n_out3p0.xyz).y;
		if (base < 0.5) {
			n_out10p0.y = (base * (2.0 * blend));
		} else {
			n_out10p0.y = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out2p0.xyz).z;
		float blend = vec3(n_out3p0.xyz).z;
		if (base < 0.5) {
			n_out10p0.z = (base * (2.0 * blend));
		} else {
			n_out10p0.z = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}


// FloatParameter:6
	float n_out6p0 = weight;


// VectorCompose:7
	vec4 n_out7p0 = vec4(n_out6p0, n_out6p0, n_out6p0, n_out6p0);


// Mix:9
	vec4 n_out9p0 = mix(n_out2p0, vec4(n_out10p0, 0.0), n_out7p0);


// Output:0
	COLOR.rgb = vec3(n_out9p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_teo35")
nodes/fragment/2/position = Vector2(-520, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorParameter_gl58d")
nodes/fragment/3/position = Vector2(-520, 220)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_4wrx5")
nodes/fragment/6/position = Vector2(-600, 420)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorCompose_xdari")
nodes/fragment/7/position = Vector2(-120, 440)
nodes/fragment/9/node = SubResource("VisualShaderNodeMix_7rxox")
nodes/fragment/9/position = Vector2(60, 160)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorOp_17myp")
nodes/fragment/10/position = Vector2(-160, 240)
nodes/fragment/connections = PackedInt32Array(6, 0, 7, 0, 6, 0, 7, 1, 6, 0, 7, 2, 2, 0, 9, 0, 6, 0, 7, 3, 7, 0, 9, 2, 9, 0, 0, 0, 2, 0, 10, 0, 3, 0, 10, 1, 10, 0, 9, 1)
